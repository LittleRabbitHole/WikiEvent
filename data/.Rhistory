}
for ( i in 1:numSheets) {
mySheet <- read.xls(excel_data, sheet=i)
write.csv(mySheet, file=paste(i, "csv", sep="."), row.names=FALSE)
}
View(mySheet)
numSheets <- sheetCount(excel_data, verbose=TRUE)
namesSheet<- sheetNames(excel_data, verbose = FALSE)
namesSheet
namesSheet[1]
for ( i in 1:numSheets) {
mySheet <- read.xls(excel_data, sheet=namesSheet[1])
write.csv(mySheet, file=paste(namesSheet[1], "csv", sep="."), row.names=FALSE)
}
for ( i in 1:numSheets) {
mySheet <- read.xls(excel_data, sheet=namesSheet[i])
write.csv(mySheet, file=paste(namesSheet[i], "csv", sep="."), row.names=FALSE)
}
namesSheet <- sheetNames(excel_data, verbose = FALSE)
namesSheet
Orders <- read.xls(excel_data, sheet="Orders" )
View(Orders)
excel_data <- ("/Users/angli/ANG/OneDrive/Documents/Pitt_PhD/others/Applications/data-task/flatiron_qs_orders_admins_july_16.xlsx")
numSheets <- sheetCount(excel_data, verbose=TRUE)
namesSheet <- sheetNames(excel_data, verbose = FALSE)
namesSheet
Orders <- read.xls(excel_data, sheet="Orders" )
Admins <- read.xls(excel_data, sheet="Admins" )
Demo <- read.xls(excel_data, sheet="Demographics" )
Patients <- read.xls(excel_data, sheet="Patients" )
Practices <- read.xls(excel_data, sheet="Practices" )
View(Patients)
View(Practices)
excel_data <- ("/Users/angli/ANG/OneDrive/Documents/Pitt_PhD/others/Applications/data-task/flatiron_qs_orders_admins_july_16.xlsx")
numSheets <- sheetCount(excel_data, verbose=TRUE)
namesSheet <- sheetNames(excel_data, verbose = FALSE)
namesSheet
Orders <- read.xls(excel_data, sheet="Orders" )
Orders <- read.xls(excel_data, sheet="Orders" )
Admins <- read.xls(excel_data, sheet="Admins" )
Demo <- read.xls(excel_data, sheet="Demographics" )
Patients <- read.xls(excel_data, sheet="Patients" )
Practices <- read.xls(excel_data, sheet="Practices" )
colnames(Orders)
size(Orders)
dim(Orders)
colnames(Orders)
numSheets <- sheetCount(excel_data, verbose=TRUE)
numSheets
namesSheet <- sheetNames(excel_data, verbose = FALSE)
namesSheet
summary(Orders)
head(Orders)
Orders <- read.xls(excel_data, sheet="Orders" )
colnames(Orders)
dim(Orders)
summary(Orders)
head(Orders)
Orders <- read.xls(excel_data, sheet="Orders" )
colnames(Orders)
dim(Orders)
summary(Orders)
#head(Orders)
Admins <- read.xls(excel_data, sheet="Admins" )
colnames(Admins)
dim(Admins)
summary(Admins)
View(Admins)
as.Date('22JUN01',format='%d%b%y')
as.Date('22-JUN-2015',format='%d%b%y')
as.Date('22-JUN-2015',format='%d-%b-%Y')
Orders$order_date = as.Date(Orders$order_date, format='%d-%b-%Y')
summary(Orders)
View(Orders)
Orders <- read.xls(excel_data, sheet="Orders" )
View(Orders)
Orders$order_date = as.Date(Orders$order_date, format='%d-%b-%Y')
Orders <- read.xls(excel_data, sheet="Orders" )
View(Orders)
Orders$order_date = as.Date(Orders$order_date, format=('%d-%b-%Y'|'%d-%m-%Y'))
Orders <- read.xls(excel_data, sheet="Orders" )
'%d-%b-%Y'|'%d-%m-%Y'
"A" or "B"
"A" | "B"
"A" || "B"
"A || B"
Orders$order_date_time = as.Date(Orders$order_date, format='%d-%b-%Y')
summary(Orders)
Orders$order_date_time[which(is.na(Orders$order_date_time))]
Orders$order_date_time[which(is.na(Orders$order_date_time))] = as.Date(Orders$order_date, format='%d-%m-%Y')
Orders$order_date[which(is.na(Orders$order_date_time))]
Orders[which(is.na(Orders$order_date_time))]
Orders[which(is.na(Orders$order_date_time)),]
Orders[which(is.na(Orders$order_date_time)),]
Orders$order_date[which(is.na(Orders$order_date_time))]
Orders$order_date_time[which(is.na(Orders$order_date_time)),] = as.Date(Orders$order_date[which(is.na(Orders$order_date_time))], format='%d-%m-%Y')
as.Date(Orders$order_date[which(is.na(Orders$order_date_time))], format='%d-%m-%Y')
Orders$order_date[which(is.na(Orders$order_date_time))]
as.Date("2017-01-29", format='%d-%m-%Y')
as.Date("2017-01-29", format='%Y-%m-%d')
as.Date(Orders$order_date[which(is.na(Orders$order_date_time))], format='%Y-%m-%d')
Orders$order_date_time[which(is.na(Orders$order_date_time)),]
Orders$order_date_time[which(is.na(Orders$order_date_time))]
Orders$order_date_time[which(is.na(Orders$order_date_time))] = as.Date(Orders$order_date[which(is.na(Orders$order_date_time))], format='%Y-%m-%d')
summary(Orders)
Admins$administered_date_time = as.Date(Orders$administered_date, format='%d-%b-%Y')
Admins <- read.xls(excel_data, sheet="Admins" )
summary(Admins)
summary(Admins)
Admins$administered_date_time = as.Date(Admins$administered_date, format='%d-%b-%Y')
summary(Admins)
print(Admins[which(is.na(Admins$administered_date_time)),])
print(Admins[which(is.na(Admins$administered_date_time)),])
print(Admins[which(is.na(Admins$administered_date_time)),])
Admins$administered_date_time[which(is.na(Orders$administered_date_time))] = as.Date(Admins$administered_date[which(is.na(Admins$administered_date_time))], format='%Y-%m-%d')
Admins <- read.xls(excel_data, sheet="Admins" )
Admins$administered_date_time = as.Date(Admins$administered_date, format='%d-%b-%Y')
print(Admins[which(is.na(Admins$administered_date_time)),])
Admins[which(is.na(Admins$administered_date_time)),]
Admins[which(is.na(Admins$administered_date_time)),]
Admins$administered_date_time[which(is.na(Admins$administered_date_time))] = as.Date(Admins$administered_date[which(is.na(Admins$administered_date_time))], format='%Y-%m-%d')
summary(Admins)
View(Admins)
Admins <- read.xls(excel_data, sheet="Admins" )
summary(Admins)
Admins$administered_date_time = as.Date(Admins$administered_date, format='%d-%b-%Y')
summary(Admins)
Admins[which(is.na(Admins$administered_date_time)),]
print(Admins[which(is.na(Admins$administered_date_time)),])
print(Admins[which(is.na(Admins$administered_date_time)),])
Admins$administered_date_time[which(is.na(Admins$administered_date_time))] = as.Date(Admins$administered_date[which(is.na(Admins$administered_date_time))], format='%Y-%m-%d')
summary(Admins)
Demo <- read.xls(excel_data, sheet="Demographics" )
colnames(Demo)
dim(Demo)
summary(Demo)
Patients <- read.xls(excel_data, sheet="Patients" )
colnames(Patients)
dim(Patients)
summary(Patients)
Patients$diagnosis_date_time = as.Date(Patients$diagnosis_date, format='%d-%b-%Y')
summary(Patients)
print(Patients[which(is.na(Patients$diagnosis_date_time)),])
print(Patients[which(is.na(Patients$diagnosis_date_time)),])
View(Patients)
Patients$advanced_diagnosis_date_time = as.Date(Patients$advanced_diagnosis_date, format='%d-%b-%Y')
summary(Patients)
print(Patients[which(is.na(Patients$advanced_diagnosis_date_time)),])
print(Patients[which(is.na(Patients$advanced_diagnosis_date_time)),])
Practices <- read.xls(excel_data, sheet="Practices" )
summary(Practices)
View(Patients)
View(Admins)
View(Practices)
View(Patients)
summary(Orders)
unique(Admins$patient_id)
length(unique(Admins$patient_id))
length(uniqe(Orders$patient_id))
length(unique(Orders$patient_id))
View(Demo)
length(unique(Demo$patient_id))
View(Orders)
View(Admins)
View(Patients)
length(unique(Patients$patient_id))
length(unique(Admins$patient_id))
length(unique(Demo$patient_id))
View(Patients)
patient_admin = merge(Patients, Admins, by = "patient_id", all = TRUE)
Patients_first = Patients[order(Patients$patient_id, Patients$diagnosis_date_time),]
View(Patients_first)
require(plyr)
Patients_first= ddply(Patients, .(patient_id, diagnosis_date_time), function(x) head(x[order(x$diagnosis_date_time, Patients$diagnosis_date_time) , ], 1))
require(dplyr)
Patients_first %>%
select(patient_id, diagnosis_date_time) %>%
group_by(patient_id) %>%
arrange(acs(diagnosis_date_time)) %>%
top_n(1) %>%
%>%
Patients_first %>%
select(patient_id, diagnosis_date_time) %>%
group_by(patient_id) %>%
arrange(acs(diagnosis_date_time)) %>%
top_n(1)
Patients_first %>%
select(patient_id, diagnosis_date_time) %>%
group_by(patient_id) %>%
arrange(diagnosis_date_time) %>%
top_n(1)
Patients_first <-
Patients %>%
select(patient_id, diagnosis_date_time) %>%
group_by(patient_id) %>%
arrange(diagnosis_date_time) %>%
top_n(1)
View(Patients_first)
View(Practices)
View(Patients_first)
Patients_first = unique(Patients_first)
View(Patients_first)
View(Patients_first)
colnames(Admins)
Admins_first <-
Admins %>%
select(patient_id, administered_date_time) %>%
group_by(patient_id) %>%
arrange(administered_date_time) %>%
#top_n(1)
patient_admin = merge(Patients, Admins, by = "patient_id", all = TRUE)
Admins_first <- Admins %>%
select(patient_id, administered_date_time) %>%
group_by(patient_id) %>%
arrange(administered_date_time) %>%
#top_n(1)
patient_admin = merge(Patients, Admins, by = "patient_id", all = TRUE)
Admins_first <- Admins %>%
select(patient_id, administered_date_time) %>%
group_by(patient_id) %>%
arrange(administered_date_time) #%>%
View(Admins_first)
Admins_first <- Admins %>%
select(patient_id, administered_date_time) %>%
group_by(patient_id) %>%
arrange(patient_id, administered_date_time) #%>%
View(Admins_first)
Patients_first <-  Patients %>%
select(patient_id, diagnosis_date_time) %>%
arrange(patient_id, diagnosis_date_time) %>%
group_by(patient_id) %>%
top_n(1)
View(Patients_first)
Patients_first = unique(Patients_first)
Admins_first <- Admins %>%
select(patient_id, administered_date_time) %>%
arrange(patient_id, administered_date_time) %>%
group_by(patient_id) %>%
top_n(1)
View(Admins_first)
Admins_first = unique(Admins_first)
View(Patients_first)
View(Patients)
patient_admin = merge(Patients_first, Admins_first, by = "patient_id")
View(patient_admin)
View(Admins)
View(Demo)
patient_admin_demo = merge(patient_admin, Demo, by = "patient_id")
Admins <- unique(Admins)
Orders <- unique(Orders)
Patients <- unique(Practices)
Practices <- unique(Patients)
Demo <- unique(Demo)
Patients_first <-  Patients %>%
select(patient_id, diagnosis_date_time) %>%
arrange(patient_id, diagnosis_date_time) %>%
group_by(patient_id) %>%
top_n(1)
View(Patients)
excel_data <- ("/Users/angli/ANG/OneDrive/Documents/Pitt_PhD/others/Applications/data-task/flatiron_qs_orders_admins_july_16.xlsx")
numSheets <- sheetCount(excel_data, verbose=TRUE)
namesSheet
namesSheet <- sheetNames(excel_data, verbose = FALSE)
namesSheet
Orders <- read.xls(excel_data, sheet="Orders" )
Orders$order_date_time = as.Date(Orders$order_date, format='%d-%b-%Y')
print(Orders[which(is.na(Orders$order_date_time)),])
Orders$order_date_time[which(is.na(Orders$order_date_time))] = as.Date(Orders$order_date[which(is.na(Orders$order_date_time))], format='%Y-%m-%d')
Admins <- read.xls(excel_data, sheet="Admins" )
Admins$administered_date_time = as.Date(Admins$administered_date, format='%d-%b-%Y')
summary(Admins)
print(Admins[which(is.na(Admins$administered_date_time)),])
Admins$administered_date_time[which(is.na(Admins$administered_date_time))] = as.Date(Admins$administered_date[which(is.na(Admins$administered_date_time))], format='%Y-%m-%d')
summary(Admins)
Demo <- read.xls(excel_data, sheet="Demographics" )
colnames(Demo)
dim(Demo)
summary(Demo)
Patients <- read.xls(excel_data, sheet="Patients" )
Patients <- read.xls(excel_data, sheet="Patients" )
colnames(Patients)
colnames(Patients)
dim(Patients)
summary(Patients)
Patients$diagnosis_date_time = as.Date(Patients$diagnosis_date, format='%d-%b-%Y')
summary(Patients)
print(Patients[which(is.na(Patients$diagnosis_date_time)),])
Patients$advanced_diagnosis_date_time = as.Date(Patients$advanced_diagnosis_date, format='%d-%b-%Y')
summary(Patients)
print(Patients[which(is.na(Patients$advanced_diagnosis_date_time)),])
Practices <- read.xls(excel_data, sheet="Practices" )
Practices <- read.xls(excel_data, sheet="Practices" )
summary(Practices)
Admins <- unique(Admins)
Orders <- unique(Orders)
Patients <- unique(Patients)
Practices <- unique(Practices)
Demo <- unique(Demo)
Patients_first <-  Patients %>%
select(patient_id, diagnosis_date_time) %>%
arrange(patient_id, diagnosis_date_time) %>%
group_by(patient_id) %>%
top_n(1)
Admins_first <- Admins %>%
select(patient_id, administered_date_time) %>%
arrange(patient_id, administered_date_time) %>%
group_by(patient_id) %>%
top_n(1)
Admins_first = unique(Admins_first) #100 unique
patient_admin = merge(Patients_first, Admins_first, by = "patient_id")
patient_admin_demo = merge(patient_admin, Demo, by = "patient_id")
View(patient_admin_demo)
View(patient_admin)
View(Demo)
Admins[which(is.na(Demo)),]
Demo[which(is.na(Demo)),]
View(Demo)
Demo$patient_id[which(is.na(Demo)),]
Demo[which(is.na(Demo)),]
Demo[which(is.na(Demo$gender)),]
Demo[which(is.na(Demo$age)),]
Demo = na.omit(Demo)
patient_admin = merge(Patients_first, Admins_first, by = "patient_id")
patient_admin_demo = merge(patient_admin, Demo, by = "patient_id")
colnames(patient_admin_demo )
patient_admin_demo$time_diff = patient_admin_demo$administered_date_time - patient_admin_demo$administered_date_time
View(patient_admin_demo)
patient_admin_demo$time_diff = difftime(patient_admin_demo$administered_date_time, patient_admin_demo$administered_date_time)
View(patient_admin_demo)
data.class(patient_admin_demo$diagnosis_date_time)
patient_admin_demo$time_diff = as.numeric(difftime(patient_admin_demo$administered_date_time, patient_admin_demo$administered_date_time))
View(patient_admin_demo)
data.class(patient_admin_demo$administered_date_time)
patient_admin_demo$time_diff = as.numeric(difftime(patient_admin_demo$administered_date_time, patient_admin_demo$administered_date_time, units="days"))
View(patient_admin_demo)
patient_admin_demo$time_diff = as.numeric(difftime(strptime(patient_admin_demo$administered_date_time, "%Y-%m-%d"), strptime(patient_admin_demo$administered_date_time, "%Y-%m-%d"), units="days"))
View(patient_admin_demo)
patient_admin_demo$diagnosis_date_time[1] - patient_admin_demo$administered_date_time[1]
patient_admin_demo$diagnosis_date_time - patient_admin_demo$administered_date_time
patient_admin_demo$time_diff = patient_admin_demo$diagnosis_date_time - patient_admin_demo$administered_date_time
patient_admin_demo$time_diff = patient_admin_demo$administered_date_time - patient_admin_demo$diagnosis_date_time
View(patient_admin_demo)
patient_admin_demo = merge(patient_admin, Demo, by = "patient_id")
patient_admin_demo$days_diff = patient_admin_demo$administered_date_time - patient_admin_demo$diagnosis_date_time
mean(patient_admin_demo$days_diff)
table(patient_admin_demo$gender, patient_admin_demo$days_diff)
library(ggplot2)
library(RColorBrewer)
summary(patient_admin_demo$gender)
female = mean(patient_admin_demo[which(patient_admin_demo$gender == "female")]$days_diff)
female = mean(patient_admin_demo$days_diff[which(patient_admin_demo$gender == "female")])
male = mean(patient_admin_demo$days_diff[which(patient_admin_demo$gender == "male")])
female
male
hist(patient_admin_demo$days_diff)
patient_admin_demo$days_diff = as.numeric(patient_admin_demo$administered_date_time - patient_admin_demo$diagnosis_date_time)
View(patient_admin_demo)
hist(patient_admin_demo$days_diff)
hist(patient_admin_demo$days_diff, breaks = 30)
min(patient_admin_demo$days_diff)
max(patient_admin_demo$days_diff)
View(patient_admin_demo)
patient_admin_demo$administered_date_time > 2018
View(patient_admin_demo)
hist(patient_admin_demo$days_diff, breaks = 20)
mean(patient_admin_demo$days_diff)
female = mean(patient_admin_demo$days_diff[which(patient_admin_demo$gender == "female")])
female
male
male = mean(patient_admin_demo$days_diff[which(patient_admin_demo$gender == "male")])
male
mean(patient_admin_demo$days_diff)
mean_days_diff=mean(patient_admin_demo$days_diff)
hist(patient_admin_demo$days_diff, breaks = 20, col="lightblue")
abline(v = mean_days_diff, col="red", lwd=3, lty=2)
mean_days_diff
hist(patient_admin_demo$days_diff, breaks = 20, col="lightblue")
abline(v = mean_days_diff, col="red", lwd=3, lty=2)
hist(patient_admin_demo$days_diff, breaks = 20, col="lightblue")
abline(v = mean(patient_admin_demo$days_diff), col="red", lwd=3, lty=2)
abline(v = mean(patient_admin_demo$days_diff), col="red")
abline(v = mean(patient_admin_demo$days_diff), col="red")
days_diff = patient_admin_demo$days_diff
hist(days_diff, breaks = 20, col="lightblue")
abline(v = mean(days_diff), col="red")
hist(days_diff, breaks = 20, col="lightblue")
abline(v = mean(days_diff), col="red")
#general summary
patient_admin_demo$days_diff = as.numeric(patient_admin_demo$administered_date_time - patient_admin_demo$diagnosis_date_time)
min(patient_admin_demo$days_diff)
max(patient_admin_demo$days_diff)
mean_days_diff=mean(patient_admin_demo$days_diff)
days_diff = patient_admin_demo$days_diff
hist(days_diff, breaks = 20, col="lightblue")
abline(v = mean(days_diff), col="red")
days_diff = patient_admin_demo$days_diff
hist(days_diff, breaks = 20, col="lightblue")
abline(v = mean(days_diff), col="red")
t.test(patient_admin_demo[c("gender","days_diff")])
t.test(days_diff ~ gender, data = patient_admin_demo)
gender_data = patient_admin_demo[which(patient_admin_demo$gender %in% c("female", "male"))]
gender_data = patient_admin_demo[which(patient_admin_demo$gender %in% c("female", "male")),]
t.test(days_diff ~ gender, data = gender_data)
gender <- ggplot(gender_data, aes(x = Gender, y = Days_Diff)) +
geom_boxplot(fill = fill, colour = line, alpha = 0.7,
outlier.colour = "#1F3552", outlier.shape = 20) +
scale_y_continuous(name = "Mean ozone in\nparts per billion",
breaks = seq(0, 175, 25),
limits=c(0, 175)) +
scale_x_discrete(name = "Month") +
ggtitle("Boxplot of mean ozone by month")
gender <- ggplot(gender_data, aes(x = Gender, y = Days_Diff)) +
geom_boxplot() +
scale_y_continuous(name = "Mean ozone in\nparts per billion",
breaks = seq(0, 175, 25),
limits=c(0, 175)) +
scale_x_discrete(name = "Month") +
ggtitle("Boxplot of mean ozone by month")
gender
gender <- ggplot(gender_data, aes(x = Gender, y = Days_Diff)) +
geom_boxplot() +
scale_x_discrete(name = "Month") +
ggtitle("Boxplot of mean ozone by month")
gender
gender <- ggplot(gender_data, aes(x = gender, y = days_diff)) +
geom_boxplot() +
scale_x_discrete(name = "Month") +
ggtitle("Boxplot of mean ozone by month")
gender
gender <- ggplot(gender_data, aes(x = gender, y = days_diff)) +
geom_boxplot() +
scale_x_discrete(name = "Days between diag and treatment") +
ggtitle("Boxplot of mean days different by gender")
gender
View(patient_admin_demo)
View(Admins)
View(Admins)
colnames(Admins)
as.Date("01-Jan-2016", format='%d-%b-%Y')
Admins %>%
select(patient_id, drug_name, administered_date_time) %>%
filter(administered_date_time <= as.Date("01-Jan-2016", format='%d-%b-%Y') & administered_date_time >= as.Date("01-Jan-2012", format='%d-%b-%Y')) %>%
%>%
Admins %>%
select(patient_id, drug_name, administered_date_time) %>%
filter(administered_date_time <= as.Date("01-Jan-2016", format='%d-%b-%Y') & administered_date_time >= as.Date("01-Jan-2012", format='%d-%b-%Y')) #%>%
filter_admin <- Admins %>%
select(patient_id, drug_name, administered_date_time) %>%
filter(administered_date_time <= as.Date("01-Jan-2016", format='%d-%b-%Y') & administered_date_time >= as.Date("01-Jan-2012", format='%d-%b-%Y')) #%>%
View(filter_admin)
filter_admin <- Admins %>%
select(patient_id, drug_name, administered_date_time) %>%
filter(administered_date_time <= as.Date("01-Jan-2016", format='%d-%b-%Y') & administered_date_time >= as.Date("01-Jan-2012", format='%d-%b-%Y')) %>%
filter_admin <- Admins %>%
select(patient_id, drug_name, administered_date_time) %>%
filter(administered_date_time <= as.Date("01-Jan-2016", format='%d-%b-%Y') & administered_date_time >= as.Date("01-Jan-2012", format='%d-%b-%Y')) %>%
length(unique(filter_admin))
filter_admin <- Admins %>%
select(patient_id, drug_name, administered_date_time) %>%
filter(administered_date_time <= as.Date("01-Jan-2016", format='%d-%b-%Y') & administered_date_time >= as.Date("01-Jan-2012", format='%d-%b-%Y')) %>%
length(unique(filter_admin$patient_id))
filter_admin <- Admins %>%
select(patient_id, drug_name, administered_date_time) %>%
filter(administered_date_time <= as.Date("01-Jan-2016", format='%d-%b-%Y') & administered_date_time >= as.Date("01-Jan-2012", format='%d-%b-%Y')) %>%
unique(filter_admin$patient_id)
filter_admin <- Admins %>%
select(patient_id, drug_name, administered_date_time) %>%
filter(administered_date_time <= as.Date("01-Jan-2016", format='%d-%b-%Y') & administered_date_time >= as.Date("01-Jan-2012", format='%d-%b-%Y')) %>%
unique(filter_admin$patient_id)
View(filter_admin)
filter_admin <- Admins %>%
select(patient_id, drug_name, administered_date_time) %>%
filter(administered_date_time <= as.Date("01-Jan-2016", format='%d-%b-%Y')
& administered_date_time >= as.Date("01-Jan-2012", format='%d-%b-%Y')
& drug_name == "nivolumab") %>%
unique(filter_admin$patient_id)
filter_admin <- Admins %>%
select(patient_id, drug_name, administered_date_time) %>%
filter(administered_date_time <= as.Date("01-Jan-2016", format='%d-%b-%Y')
& administered_date_time >= as.Date("01-Jan-2012", format='%d-%b-%Y')
& drug_name == "nivolumab")
unique(filter_admin$patient_id)
length(unique(filter_admin$patient_id))
filter_admin <- Admins %>%
select(patient_id, drug_name, administered_date_time) %>%
filter(administered_date_time <= as.Date("31-Dec-2016", format='%d-%b-%Y')
& administered_date_time >= as.Date("01-Jan-2012", format='%d-%b-%Y')
& drug_name == "nivolumab")
length(unique(filter_admin$patient_id))
(-5/9)ln(5/9) - (-4/9)ln(4/9)
(-5/9)*ln(5/9) - (-4/9)*ln(4/9)
log(5/9)
ln(5/9)
(-5/9)*log(5/9) - (-4/9)*log(4/9)
(-1/2)*log(1/2) - (1/2)*log(1/2)
(-5/9)*log(5/9) - (4/9)*log(4/9)
(-1/2)*log(1/2) - (1/2)*log(1/2
)
(-9/10)*log(9/10) - (1/10)*log(1/10)
(-5/10)*log(5/10) - (5/10)*log(5/10)
(0+0+6)/3
5+7
12/3
pwd
data =  read.csv("newcomers_4m_aggre_per_person.csv")
setwd("/Users/angli/Documents/GitHub/WikiEvent/data")
data =  read.csv("newcomers_4m_aggre_per_person.csv")
View(data)
wikidata =  read.csv("newcomers_4m_aggre_per_person.csv")
wikipedians = wikidata[which(wikidata$first_edit_type3==2),]
hist(wikipedians$article_sizediff)
hist(wikipedians$article_sizediff, breaks = 20)
